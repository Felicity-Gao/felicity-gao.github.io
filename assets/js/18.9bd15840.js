(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{363:function(a,s,t){"use strict";t.r(s);var n=t(42),e=Object(n.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"umijs-的一些使用技巧"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#umijs-的一些使用技巧"}},[a._v("#")]),a._v(" UmiJS 的一些使用技巧")]),a._v(" "),t("p",[a._v("最近在做一个基于Umi框架的运营平台系统，该项目主要以 Umi(2.x.x) + dva 为底层框架，以Ant Design Pro为 UI 组件库，包含完整的前端工程化实践。")]),a._v(" "),t("h2",{attrs:{id:"umi-with-dva"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#umi-with-dva"}},[a._v("#")]),a._v(" umi with dva")]),a._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("npm")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" --save umi-plugin-react // 使用此命令添加\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("h2",{attrs:{id:"umi与dva-结合的好处"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#umi与dva-结合的好处"}},[a._v("#")]),a._v(" umi与dva 结合的好处")]),a._v(" "),t("ul",[t("li",[a._v("按目录约定注册 model，无需手动 app.model")]),a._v(" "),t("li",[a._v("文件名即 namespace，可以省去 model 导出的 namespace key")]),a._v(" "),t("li",[a._v("无需手写 router.js，交给 umi 处理，支持 model 和 component 的按需加载")]),a._v(" "),t("li",[a._v("内置 query-string 处理，无需再手动解码和编码")]),a._v(" "),t("li",[a._v("内置 dva-loading 和 dva-immer，其中 dva-immer 需通过配置开启")]),a._v(" "),t("li",[a._v("开箱即用，无需安装额外依赖，比如 dva、dva-loading、dva-immer、path-to-regexp、object-assign、react、react-dom 等")])]),a._v(" "),t("h2",{attrs:{id:"dva中loading-的使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dva中loading-的使用"}},[a._v("#")]),a._v(" dva中loading 的使用")]),a._v(" "),t("p",[a._v("由于umi在下载dva时会内置下在dva-loading 插件，不需要你再额外的下载，在使用@connect绑定model和commponent后，会默认传入")]),a._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[a._v("@"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("connect")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" loading"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=>")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  loading"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("global"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("models"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("effects"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//  loading 中的相关参数 , ")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// loading: {")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//   global: false,                 // 全局loading，任一models有请求时 global为true，没有为false")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//   models: {user: false},         // user模块名， 当前项目user models有请求时user为ture，没有为false")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//   effects: {'user/query': false} // 某单一接口下的loading， user models下query接口有数据请求时为 true, 加载完成后为false")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// }")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br"),t("span",{staticClass:"line-number"},[a._v("8")]),t("br"),t("span",{staticClass:"line-number"},[a._v("9")]),t("br"),t("span",{staticClass:"line-number"},[a._v("10")]),t("br")])]),t("p",[a._v("loading 有三个方法，其中 loading.effects['user/query'] 为监听单一异步请求状态，当页面处于异步加载状态时该值为 true，当页面加载完成时，自动监听该值为 false。\n如果同时发出若干个异步请求，需求是当所有异步请求都响应才做下一步操作，可以使用 loading.global() 方法，该方法监听所有异步请求的状态。")])])}),[],!1,null,null,null);s.default=e.exports}}]);